import { useState } from 'react'
import { useAnimation } from '../../hooks/useAnimation'
import { Sparkles, Copy, Download, Cpu } from 'lucide-react'
import Card from '../UI/Card'
import Button from '../UI/Button'
import Loading from '../UI/Loading'

const AIContent = () => {
  const ref = useAnimation('fadeInUp')
  const [prompt, setPrompt] = useState('')
  const [contentType, setContentType] = useState('email')
  const [generatedContent, setGeneratedContent] = useState('')
  const [isGenerating, setIsGenerating] = useState(false)

  const contentTypes = [
    { value: 'email', label: 'Email', description: 'Professional business emails', icon: '✉️' },
    { value: 'social', label: 'Social Media', description: 'Engaging social posts', icon: '📱' },
    { value: 'blog', label: 'Blog Post', description: 'Informative articles', icon: '📝' }
  ]

  const generateContent = async () => {
    if (!prompt.trim()) return
    
    setIsGenerating(true)
    
    // Mock AI generation - replace with actual API call
    setTimeout(() => {
      const mockContent = {
        email: `Subject: Strategic Update: ${prompt}\n\nDear Team,\n\nI hope this message finds you well. I'm writing to provide a comprehensive update regarding ${prompt} and outline our strategic approach moving forward.\n\nKEY DEVELOPMENTS:\n• Analysis of current ${prompt} landscape\n• Strategic initiatives and implementation timeline\n• Resource allocation and team assignments\n• Expected outcomes and success metrics\n\nNEXT STEPS:\n1. Review the attached documentation\n2. Schedule team briefing session\n3. Implement phase one initiatives\n4. Monitor and adjust strategy as needed\n\nThis represents a significant opportunity for growth and innovation. I'm confident that with our collective expertise, we'll achieve remarkable results.\n\nBest regards,\nAI Command Center`,
        
        social: `🚀 BREAKING: Major Advancement in ${prompt.toUpperCase()}!\n\nWe're thrilled to announce a revolutionary breakthrough in ${prompt} that's set to transform the industry landscape!\n\n✨ WHAT THIS MEANS:\n• Unprecedented efficiency gains\n• Enhanced user experiences\n• New market opportunities\n• Competitive advantage\n\n🔬 Behind the innovation:\nOur AI systems have analyzed millions of data points to optimize ${prompt} implementation, ensuring maximum impact and sustainable growth.\n\nJoin the conversation! Share your thoughts below 👇\n\n#Innovation #TechNews #${prompt.split(' ')[0]} #FutureTech`,
        
        blog: `# The Future of ${prompt}: A Comprehensive Analysis\n\n## Executive Summary\nIn the rapidly evolving landscape of modern business, ${prompt} has emerged as a critical factor for success. This in-depth analysis explores the current state, emerging trends, and future projections.\n\n## Current Market Analysis\n- **Market Size**: $XX billion and growing at XX% CAGR\n- **Key Players**: Industry leaders and disruptive startups\n- **Adoption Rates**: Enterprise (XX%), SMB (XX%)\n\n## Technological Innovations\n### AI Integration\nAdvanced machine learning algorithms are revolutionizing how we approach ${prompt}, enabling:\n- Predictive analytics and forecasting\n- Automated optimization processes\n- Real-time performance monitoring\n\n### Blockchain Applications\nDecentralized solutions are providing:\n- Enhanced security and transparency\n- Reduced operational costs\n- Improved stakeholder trust\n\n## Strategic Recommendations\n1. **Immediate Actions** (0-3 months)\n   - Conduct comprehensive audit\n   - Identify quick-win opportunities\n   - Allocate initial resources\n\n2. **Medium-term Initiatives** (3-12 months)\n   - Implement core infrastructure\n   - Train and upskill teams\n   - Establish KPIs and metrics\n\n3. **Long-term Vision** (12+ months)\n   - Scale successful implementations\n   - Explore adjacent opportunities\n   - Drive industry standards\n\n## Conclusion\nThe ${prompt} landscape presents unprecedented opportunities for forward-thinking organizations. By embracing innovation and adopting a strategic approach, businesses can position themselves for sustained growth and competitive advantage.\n\n*Generated by AI Command Center - Web3 Business Intelligence Platform*`
      }
      
      setGeneratedContent(mockContent[contentType])
      setIsGenerating(false)
    }, 2500)
  }

  const copyToClipboard = () => {
    navigator.clipboard.writeText(generatedContent)
    // Add notification here
  }

  const downloadContent = () => {
    const element = document.createElement('a')
    const file = new Blob([generatedContent], { type: 'text/plain' })
    element.href = URL.createObjectURL(file)
    element.download = `ai-content-${contentType}-${Date.now()}.txt`
    document.body.appendChild(element)
    element.click()
    document.body.removeChild(element)
  }

  return (
    <div ref={ref} className="space-y-6">
      <div className="flex items-center justify-between">
        <div>
          <h1 className="text-3xl font-bold gradient-text">AI Content Studio</h1>
          <p className="text-gray-400 mt-2">Web3-Powered Content Generation</p>
        </div>
        <div className="flex items-center space-x-2 text-sm text-neon-blue bg-neon-blue/10 px-3 py-1 rounded-full">
          <Cpu className="w-4 h-4" />
          <span>Neural Network: Active</span>
        </div>
      </div>

      <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
        {/* Input Section */}
        <Card className="hologram">
          <h3 className="text-lg font-semibold mb-4 gradient-text">Content Generation</h3>
          
          <div className="space-y-4">
            {/* Content Type Selection */}
            <div>
              <label className="block text-sm font-medium text-gray-400 mb-2">
                Content Type
              </label>
              <div className="grid grid-cols-1 gap-3">
                {contentTypes.map(type => (
                  <button
                    key={type.value}
                    onClick={() => setContentType(type.value)}
                    className={`p-4 rounded-xl text-left transition-all cyber-button ${
                      contentType === type.value
                        ? 'bg-gradient-to-r from-neon-blue/20 to-neon-purple/20 border border-neon-blue/30'
                        : 'bg-white/5 hover:bg-white/10 border border-transparent'
                    }`}
                  >
                    <div className="flex items-center space-x-3">
                      <span className="text-2xl">{type.icon}</span>
                      <div>
                        <div className="font-medium">{type.label}</div>
                        <div className="text-xs text-gray-400 mt-1">{type.description}</div>
                      </div>
                    </div>
                  </button>
                ))}
              </div>
            </div>

            {/* Prompt Input */}
            <div>
              <label className="block text-sm font-medium text-gray-400 mb-2">
                Generation Prompt
              </label>
              <textarea
                value={prompt}
                onChange={(e) => setPrompt(e.target.value)}
                placeholder="Describe what you want to create... The AI will analyze and generate optimized content."
                className="glass w-full px-4 py-3 rounded-xl border border-gray-700 focus:border-neon-blue focus:outline-none h-32 resize-none"
              />
            </div>

            {/* Generate Button */}
            <Button 
              onClick={generateContent} 
              disabled={!prompt.trim() || isGenerating}
              className="w-full cyber-button"
            >
              <Sparkles className="w-4 h-4 mr-2" />
              {isGenerating ? 'AI Processing...' : 'Generate Content'}
            </Button>
          </div>
        </Card>

        {/* Output Section */}
        <Card className="data-stream">
          <div className="flex items-center justify-between mb-4">
            <h3 className="text-lg font-semibold gradient-text">Generated Content</h3>
            {generatedContent && (
              <div className="flex space-x-2">
                <button
                  onClick={copyToClipboard}
                  className="p-2 text-neon-blue hover:bg-neon-blue/10 rounded-lg transition-colors cyber-button"
                  title="Copy to clipboard"
                >
                  <Copy className="w-4 h-4" />
                </button>
                <button
                  onClick={downloadContent}
                  className="p-2 text-neon-green hover:bg-neon-green/10 rounded-lg transition-colors cyber-button"
                  title="Download"
                >
                  <Download className="w-4 h-4" />
                </button>
              </div>
            )}
          </div>

          {isGenerating ? (
            <div className="flex flex-col items-center justify-center py-12">
              <Loading />
              <p className="text-gray-400 mt-4">AI Neural Network is processing...</p>
              <p className="text-sm text-gray-500 mt-2">Analyzing patterns and generating optimized content</p>
            </div>
          ) : generatedContent ? (
            <div className="bg-white/5 rounded-xl p-4 max-h-96 overflow-y-auto">
              <pre className="whitespace-pre-wrap text-gray-300 font-sans text-sm leading-relaxed">
                {generatedContent}
              </pre>
            </div>
          ) : (
            <div className="text-center py-12 text-gray-500">
              <div className="w-16 h-16 bg-gradient-to-r from-neon-blue/20 to-neon-purple/20 rounded-full flex items-center justify-center mx-auto mb-4">
                <Sparkles className="w-8 h-8 text-neon-blue" />
              </div>
              <p>AI-generated content will appear here</p>
              <p className="text-sm mt-2">Enter a prompt and let our neural network work its magic</p>
            </div>
          )}
        </Card>
      </div>

      {/* Quick Prompts */}
      <Card>
        <h3 className="text-lg font-semibold mb-4 gradient-text">Quick Start Prompts</h3>
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
          <button
            onClick={() => setPrompt('Quarterly business report and performance analysis with growth projections')}
            className="p-4 bg-white/5 rounded-xl hover:bg-neon-blue/10 transition-colors text-left cyber-button group"
          >
            <div className="text-neon-blue font-semibold group-hover:gradient-text">Business Report</div>
            <div className="text-sm text-gray-400 mt-2">Comprehensive analysis and strategic insights</div>
          </button>
          <button
            onClick={() => setPrompt('Product launch announcement for new AI-powered business tool')}
            className="p-4 bg-white/5 rounded-xl hover:bg-neon-purple/10 transition-colors text-left cyber-button group"
          >
            <div className="text-neon-purple font-semibold group-hover:gradient-text">Product Launch</div>
            <div className="text-sm text-gray-400 mt-2">Exciting announcement and marketing content</div>
          </button>
          <button
            onClick={() => setPrompt('Blockchain technology implementation strategy for enterprise solutions')}
            className="p-4 bg-white/5 rounded-xl hover:bg-neon-green/10 transition-colors text-left cyber-button group"
          >
            <div className="text-neon-green font-semibold group-hover:gradient-text">Web3 Strategy</div>
            <div className="text-sm text-gray-400 mt-2">Blockchain and decentralized solutions guide</div>
          </button>
        </div>
      </Card>
    </div>
  )
}

export default AIContent